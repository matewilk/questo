version: "3"

services:
  server:
    container_name: questo_server
    build:
      context: .
      dockerfile: ./docker/app/Dockerfile
    ports:
      - "4000:4000"
      - "9229:9229"
    volumes:
      - ".:/usr/src/app"
    networks:
      - questo_network

  # dynamodb instance for local development
  dynamodb:
    container_name: questo_dynamodb
    hostname: dynamodb
    image: amazon/dynamodb-local:latest
    ports:
      - "8000:8000"
    # use -inMemory to store data in mem instead of in files (-dbPath)
    command: ["-jar", "DynamoDBLocal.jar", "-sharedDb", "-dbPath", "/data"]
    networks:
      - questo_network
    volumes:
      - ./.db-files/:/data

  # dynamodb script creating table in the local instance of dynamodb
  dynamodb_create_table:
    depends_on:
      - dynamodb
    container_name: dynamodb_create_table
    build:
      context: ./docker/dynamodb
      dockerfile: Dockerfile-dynamodb-table
      args:
        # these env vars (e.g .env file)
        - ADMIN_PASSWD=${ADMIN_PASSWD}
        # or depending on where you run the url might differ (local, dockerised, minikube etc)
        - DYNAMODB_URL=${DB_URL}
        # or ${AWS_REGION}
        - AWS_REGION=${AWS_REGION}
    environment:
      # this is needed to fool aws cli
      # that you've set up credentials
      - AWS_ACCESS_KEY_ID=local
      - AWS_SECRET_ACCESS_KEY=local
    networks:
      - questo_network

networks:
  questo_network:
    driver: bridge
